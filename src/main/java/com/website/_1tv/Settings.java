//package com.website._1tv;
//
//import com.website._1tv.domain.Message;
//import com.website._1tv.repository.UserRepository;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.stereotype.Controller;
//import org.springframework.ui.Model;
//import org.springframework.web.bind.annotation.GetMapping;
//import org.springframework.web.bind.annotation.PostMapping;
//import org.springframework.web.bind.annotation.RequestParam;
//
//import java.util.Map;
//
//@Controller
//public class GreetingController {
//
//  @ Autowired
//  private UserRepository repository;
//
//  @GetMapping
//  public String index(Map<String, Object> model){
//
//    Iterable<Message> messages = repository.findAll();
//
//    model.put("messages", messages);
//    return "index";
//  }
//
//  @PostMapping
//  public String add(@RequestParam String text, @RequestParam String tag, Map<String, Object> model){
//    Message message = new Message(text, tag);
//    repository.save(message);
//
//    Iterable<Message> messages = repository.findAll();
//    model.put("messages", messages);
//
//    return "index";
//  }
//}



package com.website._1tv;

import com.website._1tv.domain.Message;
import com.website._1tv.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class GreetingController {
  @Autowired // This means to get the bean called userRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private UserRepository userRepository;

  @GetMapping(path="/add") // Map ONLY GET Requests
  public @ResponseBody String addNewUser (@RequestParam String text
          , @RequestParam String tag) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    Message n = new Message();
    n.setText(text);
    n.setTag(tag);
    userRepository.save(n);
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Message> getAllUsers() {
    // This returns a JSON or XML with the users
    return userRepository.findAll();
  }
}